// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Example {

namespace {

const ::google::protobuf::Descriptor* ObjectList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Object_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Object_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProgressUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProgressUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* SlicedObjectList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SlicedObjectList_reflection_ = NULL;
const ::google::protobuf::Descriptor* SlicedObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SlicedObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Polygon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Polygon_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_example_2eproto() {
  protobuf_AddDesc_example_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "example.proto");
  GOOGLE_CHECK(file != NULL);
  ObjectList_descriptor_ = file->message_type(0);
  static const int ObjectList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectList, objects_),
  };
  ObjectList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectList_descriptor_,
      ObjectList::default_instance_,
      ObjectList_offsets_,
      -1,
      -1,
      -1,
      sizeof(ObjectList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectList, _is_default_instance_));
  Object_descriptor_ = file->message_type(1);
  static const int Object_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, vertices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, normals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, indices_),
  };
  Object_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Object_descriptor_,
      Object::default_instance_,
      Object_offsets_,
      -1,
      -1,
      -1,
      sizeof(Object),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Object, _is_default_instance_));
  ProgressUpdate_descriptor_ = file->message_type(2);
  static const int ProgressUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgressUpdate, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgressUpdate, amount_),
  };
  ProgressUpdate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProgressUpdate_descriptor_,
      ProgressUpdate::default_instance_,
      ProgressUpdate_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProgressUpdate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgressUpdate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgressUpdate, _is_default_instance_));
  SlicedObjectList_descriptor_ = file->message_type(3);
  static const int SlicedObjectList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObjectList, objects_),
  };
  SlicedObjectList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SlicedObjectList_descriptor_,
      SlicedObjectList::default_instance_,
      SlicedObjectList_offsets_,
      -1,
      -1,
      -1,
      sizeof(SlicedObjectList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObjectList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObjectList, _is_default_instance_));
  SlicedObject_descriptor_ = file->message_type(4);
  static const int SlicedObject_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObject, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObject, polygons_),
  };
  SlicedObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SlicedObject_descriptor_,
      SlicedObject::default_instance_,
      SlicedObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(SlicedObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlicedObject, _is_default_instance_));
  Polygon_descriptor_ = file->message_type(5);
  static const int Polygon_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Polygon, points_),
  };
  Polygon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Polygon_descriptor_,
      Polygon::default_instance_,
      Polygon_offsets_,
      -1,
      -1,
      -1,
      sizeof(Polygon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Polygon, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Polygon, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_example_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectList_descriptor_, &ObjectList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Object_descriptor_, &Object::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProgressUpdate_descriptor_, &ProgressUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SlicedObjectList_descriptor_, &SlicedObjectList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SlicedObject_descriptor_, &SlicedObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Polygon_descriptor_, &Polygon::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_example_2eproto() {
  delete ObjectList::default_instance_;
  delete ObjectList_reflection_;
  delete Object::default_instance_;
  delete Object_reflection_;
  delete ProgressUpdate::default_instance_;
  delete ProgressUpdate_reflection_;
  delete SlicedObjectList::default_instance_;
  delete SlicedObjectList_reflection_;
  delete SlicedObject::default_instance_;
  delete SlicedObject_reflection_;
  delete Polygon::default_instance_;
  delete Polygon_reflection_;
}

void protobuf_AddDesc_example_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rexample.proto\022\007Example\".\n\nObjectList\022 "
    "\n\007objects\030\001 \003(\0132\017.Example.Object\"H\n\006Obje"
    "ct\022\n\n\002id\030\001 \001(\005\022\020\n\010vertices\030\002 \001(\014\022\017\n\007norm"
    "als\030\003 \001(\014\022\017\n\007indices\030\004 \001(\014\"2\n\016ProgressUp"
    "date\022\020\n\010objectId\030\001 \001(\005\022\016\n\006amount\030\002 \001(\005\":"
    "\n\020SlicedObjectList\022&\n\007objects\030\001 \003(\0132\025.Ex"
    "ample.SlicedObject\">\n\014SlicedObject\022\n\n\002id"
    "\030\001 \001(\005\022\"\n\010polygons\030\002 \003(\0132\020.Example.Polyg"
    "on\"\031\n\007Polygon\022\016\n\006points\030\001 \001(\014b\006proto3", 357);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example.proto", &protobuf_RegisterTypes);
  ObjectList::default_instance_ = new ObjectList();
  Object::default_instance_ = new Object();
  ProgressUpdate::default_instance_ = new ProgressUpdate();
  SlicedObjectList::default_instance_ = new SlicedObjectList();
  SlicedObject::default_instance_ = new SlicedObject();
  Polygon::default_instance_ = new Polygon();
  ObjectList::default_instance_->InitAsDefaultInstance();
  Object::default_instance_->InitAsDefaultInstance();
  ProgressUpdate::default_instance_->InitAsDefaultInstance();
  SlicedObjectList::default_instance_->InitAsDefaultInstance();
  SlicedObject::default_instance_->InitAsDefaultInstance();
  Polygon::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_example_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_example_2eproto {
  StaticDescriptorInitializer_example_2eproto() {
    protobuf_AddDesc_example_2eproto();
  }
} static_descriptor_initializer_example_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ObjectList::kObjectsFieldNumber;
#endif  // !_MSC_VER

ObjectList::ObjectList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.ObjectList)
}

void ObjectList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ObjectList::ObjectList(const ObjectList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.ObjectList)
}

void ObjectList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ObjectList::~ObjectList() {
  // @@protoc_insertion_point(destructor:Example.ObjectList)
  SharedDtor();
}

void ObjectList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectList_descriptor_;
}

const ObjectList& ObjectList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

ObjectList* ObjectList::default_instance_ = NULL;

ObjectList* ObjectList::New(::google::protobuf::Arena* arena) const {
  ObjectList* n = new ObjectList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectList::Clear() {
  objects_.Clear();
}

bool ObjectList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.ObjectList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Example.Object objects = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_objects;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.ObjectList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.ObjectList)
  return false;
#undef DO_
}

void ObjectList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.ObjectList)
  // repeated .Example.Object objects = 1;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objects(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.ObjectList)
}

::google::protobuf::uint8* ObjectList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.ObjectList)
  // repeated .Example.Object objects = 1;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->objects(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.ObjectList)
  return target;
}

int ObjectList::ByteSize() const {
  int total_size = 0;

  // repeated .Example.Object objects = 1;
  total_size += 1 * this->objects_size();
  for (int i = 0; i < this->objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objects(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ObjectList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectList::MergeFrom(const ObjectList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  objects_.MergeFrom(from.objects_);
}

void ObjectList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectList::CopyFrom(const ObjectList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectList::IsInitialized() const {

  return true;
}

void ObjectList::Swap(ObjectList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectList::InternalSwap(ObjectList* other) {
  objects_.UnsafeArenaSwap(&other->objects_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectList_descriptor_;
  metadata.reflection = ObjectList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectList

// repeated .Example.Object objects = 1;
int ObjectList::objects_size() const {
  return objects_.size();
}
void ObjectList::clear_objects() {
  objects_.Clear();
}
const ::Example::Object& ObjectList::objects(int index) const {
  // @@protoc_insertion_point(field_get:Example.ObjectList.objects)
  return objects_.Get(index);
}
::Example::Object* ObjectList::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:Example.ObjectList.objects)
  return objects_.Mutable(index);
}
::Example::Object* ObjectList::add_objects() {
  // @@protoc_insertion_point(field_add:Example.ObjectList.objects)
  return objects_.Add();
}
::google::protobuf::RepeatedPtrField< ::Example::Object >*
ObjectList::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:Example.ObjectList.objects)
  return &objects_;
}
const ::google::protobuf::RepeatedPtrField< ::Example::Object >&
ObjectList::objects() const {
  // @@protoc_insertion_point(field_list:Example.ObjectList.objects)
  return objects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Object::kIdFieldNumber;
const int Object::kVerticesFieldNumber;
const int Object::kNormalsFieldNumber;
const int Object::kIndicesFieldNumber;
#endif  // !_MSC_VER

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.Object)
}

void Object::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Object::Object(const Object& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.Object)
}

void Object::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  vertices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:Example.Object)
  SharedDtor();
}

void Object::SharedDtor() {
  vertices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Object_descriptor_;
}

const Object& Object::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

Object* Object::default_instance_ = NULL;

Object* Object::New(::google::protobuf::Arena* arena) const {
  Object* n = new Object;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Object::Clear() {
  id_ = 0;
  vertices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.Object)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vertices;
        break;
      }

      // optional bytes vertices = 2;
      case 2: {
        if (tag == 18) {
         parse_vertices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vertices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_normals;
        break;
      }

      // optional bytes normals = 3;
      case 3: {
        if (tag == 26) {
         parse_normals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_normals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_indices;
        break;
      }

      // optional bytes indices = 4;
      case 4: {
        if (tag == 34) {
         parse_indices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_indices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.Object)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional bytes vertices = 2;
  if (this->vertices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vertices(), output);
  }

  // optional bytes normals = 3;
  if (this->normals().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->normals(), output);
  }

  // optional bytes indices = 4;
  if (this->indices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->indices(), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.Object)
}

::google::protobuf::uint8* Object::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.Object)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional bytes vertices = 2;
  if (this->vertices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vertices(), target);
  }

  // optional bytes normals = 3;
  if (this->normals().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->normals(), target);
  }

  // optional bytes indices = 4;
  if (this->indices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->indices(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.Object)
  return target;
}

int Object::ByteSize() const {
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional bytes vertices = 2;
  if (this->vertices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vertices());
  }

  // optional bytes normals = 3;
  if (this->normals().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->normals());
  }

  // optional bytes indices = 4;
  if (this->indices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->indices());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Object* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.vertices().size() > 0) {

    vertices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vertices_);
  }
  if (from.normals().size() > 0) {

    normals_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normals_);
  }
  if (from.indices().size() > 0) {

    indices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indices_);
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {

  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  std::swap(id_, other->id_);
  vertices_.Swap(&other->vertices_);
  normals_.Swap(&other->normals_);
  indices_.Swap(&other->indices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Object_descriptor_;
  metadata.reflection = Object_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Object

// optional int32 id = 1;
void Object::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Object::id() const {
  // @@protoc_insertion_point(field_get:Example.Object.id)
  return id_;
}
 void Object::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Example.Object.id)
}

// optional bytes vertices = 2;
void Object::clear_vertices() {
  vertices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Object::vertices() const {
  // @@protoc_insertion_point(field_get:Example.Object.vertices)
  return vertices_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_vertices(const ::std::string& value) {
  
  vertices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.Object.vertices)
}
 void Object::set_vertices(const char* value) {
  
  vertices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.Object.vertices)
}
 void Object::set_vertices(const void* value, size_t size) {
  
  vertices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.Object.vertices)
}
 ::std::string* Object::mutable_vertices() {
  
  // @@protoc_insertion_point(field_mutable:Example.Object.vertices)
  return vertices_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Object::release_vertices() {
  
  return vertices_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_allocated_vertices(::std::string* vertices) {
  if (vertices != NULL) {
    
  } else {
    
  }
  vertices_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vertices);
  // @@protoc_insertion_point(field_set_allocated:Example.Object.vertices)
}

// optional bytes normals = 3;
void Object::clear_normals() {
  normals_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Object::normals() const {
  // @@protoc_insertion_point(field_get:Example.Object.normals)
  return normals_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_normals(const ::std::string& value) {
  
  normals_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.Object.normals)
}
 void Object::set_normals(const char* value) {
  
  normals_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.Object.normals)
}
 void Object::set_normals(const void* value, size_t size) {
  
  normals_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.Object.normals)
}
 ::std::string* Object::mutable_normals() {
  
  // @@protoc_insertion_point(field_mutable:Example.Object.normals)
  return normals_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Object::release_normals() {
  
  return normals_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_allocated_normals(::std::string* normals) {
  if (normals != NULL) {
    
  } else {
    
  }
  normals_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), normals);
  // @@protoc_insertion_point(field_set_allocated:Example.Object.normals)
}

// optional bytes indices = 4;
void Object::clear_indices() {
  indices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Object::indices() const {
  // @@protoc_insertion_point(field_get:Example.Object.indices)
  return indices_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_indices(const ::std::string& value) {
  
  indices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.Object.indices)
}
 void Object::set_indices(const char* value) {
  
  indices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.Object.indices)
}
 void Object::set_indices(const void* value, size_t size) {
  
  indices_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.Object.indices)
}
 ::std::string* Object::mutable_indices() {
  
  // @@protoc_insertion_point(field_mutable:Example.Object.indices)
  return indices_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Object::release_indices() {
  
  return indices_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Object::set_allocated_indices(::std::string* indices) {
  if (indices != NULL) {
    
  } else {
    
  }
  indices_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), indices);
  // @@protoc_insertion_point(field_set_allocated:Example.Object.indices)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ProgressUpdate::kObjectIdFieldNumber;
const int ProgressUpdate::kAmountFieldNumber;
#endif  // !_MSC_VER

ProgressUpdate::ProgressUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.ProgressUpdate)
}

void ProgressUpdate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProgressUpdate::ProgressUpdate(const ProgressUpdate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.ProgressUpdate)
}

void ProgressUpdate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  objectid_ = 0;
  amount_ = 0;
}

ProgressUpdate::~ProgressUpdate() {
  // @@protoc_insertion_point(destructor:Example.ProgressUpdate)
  SharedDtor();
}

void ProgressUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProgressUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgressUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProgressUpdate_descriptor_;
}

const ProgressUpdate& ProgressUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

ProgressUpdate* ProgressUpdate::default_instance_ = NULL;

ProgressUpdate* ProgressUpdate::New(::google::protobuf::Arena* arena) const {
  ProgressUpdate* n = new ProgressUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgressUpdate::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProgressUpdate*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objectid_, amount_);

#undef ZR_HELPER_
#undef ZR_

}

bool ProgressUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.ProgressUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }

      // optional int32 amount = 2;
      case 2: {
        if (tag == 16) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.ProgressUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.ProgressUpdate)
  return false;
#undef DO_
}

void ProgressUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.ProgressUpdate)
  // optional int32 objectId = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional int32 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.ProgressUpdate)
}

::google::protobuf::uint8* ProgressUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.ProgressUpdate)
  // optional int32 objectId = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional int32 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.ProgressUpdate)
  return target;
}

int ProgressUpdate::ByteSize() const {
  int total_size = 0;

  // optional int32 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objectid());
  }

  // optional int32 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgressUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProgressUpdate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgressUpdate>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProgressUpdate::MergeFrom(const ProgressUpdate& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void ProgressUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgressUpdate::CopyFrom(const ProgressUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgressUpdate::IsInitialized() const {

  return true;
}

void ProgressUpdate::Swap(ProgressUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgressUpdate::InternalSwap(ProgressUpdate* other) {
  std::swap(objectid_, other->objectid_);
  std::swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProgressUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProgressUpdate_descriptor_;
  metadata.reflection = ProgressUpdate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProgressUpdate

// optional int32 objectId = 1;
void ProgressUpdate::clear_objectid() {
  objectid_ = 0;
}
 ::google::protobuf::int32 ProgressUpdate::objectid() const {
  // @@protoc_insertion_point(field_get:Example.ProgressUpdate.objectId)
  return objectid_;
}
 void ProgressUpdate::set_objectid(::google::protobuf::int32 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:Example.ProgressUpdate.objectId)
}

// optional int32 amount = 2;
void ProgressUpdate::clear_amount() {
  amount_ = 0;
}
 ::google::protobuf::int32 ProgressUpdate::amount() const {
  // @@protoc_insertion_point(field_get:Example.ProgressUpdate.amount)
  return amount_;
}
 void ProgressUpdate::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:Example.ProgressUpdate.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SlicedObjectList::kObjectsFieldNumber;
#endif  // !_MSC_VER

SlicedObjectList::SlicedObjectList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.SlicedObjectList)
}

void SlicedObjectList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SlicedObjectList::SlicedObjectList(const SlicedObjectList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.SlicedObjectList)
}

void SlicedObjectList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SlicedObjectList::~SlicedObjectList() {
  // @@protoc_insertion_point(destructor:Example.SlicedObjectList)
  SharedDtor();
}

void SlicedObjectList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SlicedObjectList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlicedObjectList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SlicedObjectList_descriptor_;
}

const SlicedObjectList& SlicedObjectList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

SlicedObjectList* SlicedObjectList::default_instance_ = NULL;

SlicedObjectList* SlicedObjectList::New(::google::protobuf::Arena* arena) const {
  SlicedObjectList* n = new SlicedObjectList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlicedObjectList::Clear() {
  objects_.Clear();
}

bool SlicedObjectList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.SlicedObjectList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Example.SlicedObject objects = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_objects;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.SlicedObjectList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.SlicedObjectList)
  return false;
#undef DO_
}

void SlicedObjectList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.SlicedObjectList)
  // repeated .Example.SlicedObject objects = 1;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objects(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.SlicedObjectList)
}

::google::protobuf::uint8* SlicedObjectList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.SlicedObjectList)
  // repeated .Example.SlicedObject objects = 1;
  for (unsigned int i = 0, n = this->objects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->objects(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.SlicedObjectList)
  return target;
}

int SlicedObjectList::ByteSize() const {
  int total_size = 0;

  // repeated .Example.SlicedObject objects = 1;
  total_size += 1 * this->objects_size();
  for (int i = 0; i < this->objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objects(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlicedObjectList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SlicedObjectList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SlicedObjectList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SlicedObjectList::MergeFrom(const SlicedObjectList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  objects_.MergeFrom(from.objects_);
}

void SlicedObjectList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicedObjectList::CopyFrom(const SlicedObjectList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicedObjectList::IsInitialized() const {

  return true;
}

void SlicedObjectList::Swap(SlicedObjectList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlicedObjectList::InternalSwap(SlicedObjectList* other) {
  objects_.UnsafeArenaSwap(&other->objects_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SlicedObjectList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SlicedObjectList_descriptor_;
  metadata.reflection = SlicedObjectList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SlicedObjectList

// repeated .Example.SlicedObject objects = 1;
int SlicedObjectList::objects_size() const {
  return objects_.size();
}
void SlicedObjectList::clear_objects() {
  objects_.Clear();
}
const ::Example::SlicedObject& SlicedObjectList::objects(int index) const {
  // @@protoc_insertion_point(field_get:Example.SlicedObjectList.objects)
  return objects_.Get(index);
}
::Example::SlicedObject* SlicedObjectList::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:Example.SlicedObjectList.objects)
  return objects_.Mutable(index);
}
::Example::SlicedObject* SlicedObjectList::add_objects() {
  // @@protoc_insertion_point(field_add:Example.SlicedObjectList.objects)
  return objects_.Add();
}
::google::protobuf::RepeatedPtrField< ::Example::SlicedObject >*
SlicedObjectList::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:Example.SlicedObjectList.objects)
  return &objects_;
}
const ::google::protobuf::RepeatedPtrField< ::Example::SlicedObject >&
SlicedObjectList::objects() const {
  // @@protoc_insertion_point(field_list:Example.SlicedObjectList.objects)
  return objects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SlicedObject::kIdFieldNumber;
const int SlicedObject::kPolygonsFieldNumber;
#endif  // !_MSC_VER

SlicedObject::SlicedObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.SlicedObject)
}

void SlicedObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SlicedObject::SlicedObject(const SlicedObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.SlicedObject)
}

void SlicedObject::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
}

SlicedObject::~SlicedObject() {
  // @@protoc_insertion_point(destructor:Example.SlicedObject)
  SharedDtor();
}

void SlicedObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SlicedObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlicedObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SlicedObject_descriptor_;
}

const SlicedObject& SlicedObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

SlicedObject* SlicedObject::default_instance_ = NULL;

SlicedObject* SlicedObject::New(::google::protobuf::Arena* arena) const {
  SlicedObject* n = new SlicedObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlicedObject::Clear() {
  id_ = 0;
  polygons_.Clear();
}

bool SlicedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.SlicedObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_polygons;
        break;
      }

      // repeated .Example.Polygon polygons = 2;
      case 2: {
        if (tag == 18) {
         parse_polygons:
          DO_(input->IncrementRecursionDepth());
         parse_loop_polygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_polygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_polygons;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.SlicedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.SlicedObject)
  return false;
#undef DO_
}

void SlicedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.SlicedObject)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .Example.Polygon polygons = 2;
  for (unsigned int i = 0, n = this->polygons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->polygons(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.SlicedObject)
}

::google::protobuf::uint8* SlicedObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.SlicedObject)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .Example.Polygon polygons = 2;
  for (unsigned int i = 0, n = this->polygons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->polygons(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.SlicedObject)
  return target;
}

int SlicedObject::ByteSize() const {
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // repeated .Example.Polygon polygons = 2;
  total_size += 1 * this->polygons_size();
  for (int i = 0; i < this->polygons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->polygons(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlicedObject::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SlicedObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SlicedObject>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SlicedObject::MergeFrom(const SlicedObject& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  polygons_.MergeFrom(from.polygons_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SlicedObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicedObject::CopyFrom(const SlicedObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicedObject::IsInitialized() const {

  return true;
}

void SlicedObject::Swap(SlicedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlicedObject::InternalSwap(SlicedObject* other) {
  std::swap(id_, other->id_);
  polygons_.UnsafeArenaSwap(&other->polygons_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SlicedObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SlicedObject_descriptor_;
  metadata.reflection = SlicedObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SlicedObject

// optional int32 id = 1;
void SlicedObject::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 SlicedObject::id() const {
  // @@protoc_insertion_point(field_get:Example.SlicedObject.id)
  return id_;
}
 void SlicedObject::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Example.SlicedObject.id)
}

// repeated .Example.Polygon polygons = 2;
int SlicedObject::polygons_size() const {
  return polygons_.size();
}
void SlicedObject::clear_polygons() {
  polygons_.Clear();
}
const ::Example::Polygon& SlicedObject::polygons(int index) const {
  // @@protoc_insertion_point(field_get:Example.SlicedObject.polygons)
  return polygons_.Get(index);
}
::Example::Polygon* SlicedObject::mutable_polygons(int index) {
  // @@protoc_insertion_point(field_mutable:Example.SlicedObject.polygons)
  return polygons_.Mutable(index);
}
::Example::Polygon* SlicedObject::add_polygons() {
  // @@protoc_insertion_point(field_add:Example.SlicedObject.polygons)
  return polygons_.Add();
}
::google::protobuf::RepeatedPtrField< ::Example::Polygon >*
SlicedObject::mutable_polygons() {
  // @@protoc_insertion_point(field_mutable_list:Example.SlicedObject.polygons)
  return &polygons_;
}
const ::google::protobuf::RepeatedPtrField< ::Example::Polygon >&
SlicedObject::polygons() const {
  // @@protoc_insertion_point(field_list:Example.SlicedObject.polygons)
  return polygons_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Polygon::kPointsFieldNumber;
#endif  // !_MSC_VER

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Example.Polygon)
}

void Polygon::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Example.Polygon)
}

void Polygon::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:Example.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
  points_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Polygon_descriptor_;
}

const Polygon& Polygon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

Polygon* Polygon::default_instance_ = NULL;

Polygon* Polygon::New(::google::protobuf::Arena* arena) const {
  Polygon* n = new Polygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Polygon::Clear() {
  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Example.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes points = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Example.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Example.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Example.Polygon)
  // optional bytes points = 1;
  if (this->points().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->points(), output);
  }

  // @@protoc_insertion_point(serialize_end:Example.Polygon)
}

::google::protobuf::uint8* Polygon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Example.Polygon)
  // optional bytes points = 1;
  if (this->points().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->points(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Example.Polygon)
  return target;
}

int Polygon::ByteSize() const {
  int total_size = 0;

  // optional bytes points = 1;
  if (this->points().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->points());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Polygon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.points().size() > 0) {

    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {

  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  points_.Swap(&other->points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Polygon_descriptor_;
  metadata.reflection = Polygon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Polygon

// optional bytes points = 1;
void Polygon::clear_points() {
  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Polygon::points() const {
  // @@protoc_insertion_point(field_get:Example.Polygon.points)
  return points_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Polygon::set_points(const ::std::string& value) {
  
  points_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.Polygon.points)
}
 void Polygon::set_points(const char* value) {
  
  points_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.Polygon.points)
}
 void Polygon::set_points(const void* value, size_t size) {
  
  points_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.Polygon.points)
}
 ::std::string* Polygon::mutable_points() {
  
  // @@protoc_insertion_point(field_mutable:Example.Polygon.points)
  return points_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Polygon::release_points() {
  
  return points_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Polygon::set_allocated_points(::std::string* points) {
  if (points != NULL) {
    
  } else {
    
  }
  points_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), points);
  // @@protoc_insertion_point(field_set_allocated:Example.Polygon.points)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Example

// @@protoc_insertion_point(global_scope)
